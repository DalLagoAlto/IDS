#nullable enable
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1094.0 using the following command:
// xscgen C:\Code\IDS_repo\Development\ids.ren.xsd --verbose --netCore --order --nullable --nullableReferenceAttributes --output=C:\Code\IDS_repo\SchemaProject
namespace Ids
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("entityType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequirementsTypeEntity))]
    public partial class EntityType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("name", Order=0)]
        public IdsValue Name { get; set; }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("predefinedType", Order=1)]
        public IdsValue PredefinedType { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("idsValue", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IdsValue
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("simpleValue", Order=0)]
        public string SimpleValue { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("restriction", Order=1, Namespace = "http://www.w3.org/2001/XMLSchema")]
        public Restriction? RestrictionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Restriction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RestrictionValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public Restriction? Restriction
        {
            get
            {
                if (this.RestrictionValueSpecified)
                {
                    return this.RestrictionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RestrictionValue = value;
                this.RestrictionValueSpecified = value is not null;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("classificationType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequirementsTypeClassification))]
    public partial class ClassificationType
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("value", Order=0)]
        public IdsValue Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("system", Order=1)]
        public IdsValue System { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("partOfType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequirementsTypePartOf))]
    public partial class PartOfType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("entity", Order=0)]
        public EntityType Entity { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("relation")]
        public Relations RelationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Relation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RelationValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<Relations> Relation
        {
            get
            {
                if (this.RelationValueSpecified)
                {
                    return this.RelationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RelationValue = value.GetValueOrDefault();
                this.RelationValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("relations", Namespace="http://standards.buildingsmart.org/IDS")]
    public enum Relations
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("IFCRELAGGREGATES")]
        Ifcrelaggregates,
        
        [System.Xml.Serialization.XmlEnumAttribute("IFCRELASSIGNSTOGROUP")]
        Ifcrelassignstogroup,
        
        [System.Xml.Serialization.XmlEnumAttribute("IFCRELCONTAINEDINSPATIALSTRUCTURE")]
        Ifcrelcontainedinspatialstructure,
        
        [System.Xml.Serialization.XmlEnumAttribute("IFCRELNESTS")]
        Ifcrelnests,
        
        [System.Xml.Serialization.XmlEnumAttribute("IFCRELVOIDSELEMENT IFCRELFILLSELEMENT")]
        IfcrelvoidselementIfcrelfillselement,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("applicabilityType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplicabilityType : IMinmaxAttributesGroup
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("entity", Order=0)]
        public EntityType Entity { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PartOfType> _partOf;
        
        [System.Xml.Serialization.XmlElementAttribute("partOf", Order=1)]
        public System.Collections.ObjectModel.Collection<PartOfType> PartOf
        {
            get
            {
                return _partOf;
            }
            private set
            {
                _partOf = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PartOf collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartOfSpecified
        {
            get
            {
                return (this.PartOf.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ApplicabilityType" /> class.</para>
        /// </summary>
        public ApplicabilityType()
        {
            this._partOf = new System.Collections.ObjectModel.Collection<PartOfType>();
            this._classification = new System.Collections.ObjectModel.Collection<ClassificationType>();
            this._attribute = new System.Collections.ObjectModel.Collection<AttributeType>();
            this._property = new System.Collections.ObjectModel.Collection<PropertyType>();
            this._material = new System.Collections.ObjectModel.Collection<MaterialType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ClassificationType> _classification;
        
        [System.Xml.Serialization.XmlElementAttribute("classification", Order=2)]
        public System.Collections.ObjectModel.Collection<ClassificationType> Classification
        {
            get
            {
                return _classification;
            }
            private set
            {
                _classification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Classification collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClassificationSpecified
        {
            get
            {
                return (this.Classification.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AttributeType> _attribute;
        
        [System.Xml.Serialization.XmlElementAttribute("attribute", Order=3)]
        public System.Collections.ObjectModel.Collection<AttributeType> Attribute
        {
            get
            {
                return _attribute;
            }
            private set
            {
                _attribute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Attribute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttributeSpecified
        {
            get
            {
                return (this.Attribute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PropertyType> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property", Order=4)]
        public System.Collections.ObjectModel.Collection<PropertyType> Property
        {
            get
            {
                return _property;
            }
            private set
            {
                _property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MaterialType> _material;
        
        [System.Xml.Serialization.XmlElementAttribute("material", Order=5)]
        public System.Collections.ObjectModel.Collection<MaterialType> Material
        {
            get
            {
                return _material;
            }
            private set
            {
                _material = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Material collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaterialSpecified
        {
            get
            {
                return (this.Material.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _minOccurs = "1";
        
        [System.ComponentModel.DefaultValueAttribute("1")]
        [System.Xml.Serialization.XmlAttributeAttribute("minOccurs")]
        public string MinOccurs
        {
            get
            {
                return _minOccurs;
            }
            set
            {
                _minOccurs = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private string _maxOccurs = "1";
        
        /// <summary>
        /// <para>for maxOccurs</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("1")]
        [System.Xml.Serialization.XmlAttributeAttribute("maxOccurs")]
        public string MaxOccurs
        {
            get
            {
                return _maxOccurs;
            }
            set
            {
                _maxOccurs = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("attributeType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequirementsTypeAttribute))]
    public partial class AttributeType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("name", Order=0)]
        public IdsValue Name { get; set; }
        
        /// <summary>
        /// <para>Depending on the IFC type of the attribute, values are expressed in the default unit documented at 
        ///						https://github.com/buildingSMART/IDS/blob/master/Documentation/units.md, and unit conversion might be required.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depending on the IFC type of the attribute, values are expressed in the default u" +
            "nit documented at https://github.com/buildingSMART/IDS/blob/master/Documentation" +
            "/units.md, and unit conversion might be required.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("value", Order=1)]
        public IdsValue Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("propertyType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequirementsTypeProperty))]
    public partial class PropertyType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("propertySet", Order=0)]
        public IdsValue PropertySet { get; set; }
        
        /// <summary>
        /// <para>the moniker 'baseName' is chosen to clarify that the data needs to reference the property name as stored in the IFC file, 
        ///						which might differ from the multiple language-dependent presentations (e.g. 'FireRating' vs. 'Fire rating').</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("the moniker \'baseName\' is chosen to clarify that the data needs to reference the " +
            "property name as stored in the IFC file, which might differ from the multiple la" +
            "nguage-dependent presentations (e.g. \'FireRating\' vs. \'Fire rating\').")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("baseName", Order=1)]
        public IdsValue BaseName { get; set; }
        
        /// <summary>
        /// <para>Depending on the dataType attribute, values are expressed in the default unit documented at 
        ///						https://github.com/buildingSMART/IDS/blob/master/Documentation/units.md, and unit conversion might be required.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Depending on the dataType attribute, values are expressed in the default unit doc" +
            "umented at https://github.com/buildingSMART/IDS/blob/master/Documentation/units." +
            "md, and unit conversion might be required.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("value", Order=2)]
        public IdsValue Value { get; set; }
        
        /// <summary>
        /// <para>This is the name of an IFC Defined Type, all uppercase.</para>
        /// <para xml:lang="en">Pattern: [A-Z]+.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("This is the name of an IFC Defined Type, all uppercase.")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-Z]+")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("dataType")]
        public string DataType { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("materialType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RequirementsTypeMaterial))]
    public partial class MaterialType
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("value", Order=0)]
        public IdsValue Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    public partial interface IMinmaxAttributesGroup
    {
        
        [System.ComponentModel.DefaultValueAttribute("1")]
        string MinOccurs
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>for maxOccurs</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute("1")]
        string MaxOccurs
        {
            get;
            set;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("requirementsType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecificationTypeRequirements))]
    public partial class RequirementsType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RequirementsTypeEntity> _entity;
        
        /// <summary>
        /// <para>Make sure 'Name' value of requirements entity is the same as the 'applicability' node, or a wildcard (inclusive pattern).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Make sure \'Name\' value of requirements entity is the same as the \'applicability\' " +
            "node, or a wildcard (inclusive pattern).")]
        [System.Xml.Serialization.XmlElementAttribute("entity", Order=0)]
        public System.Collections.ObjectModel.Collection<RequirementsTypeEntity> Entity
        {
            get
            {
                return _entity;
            }
            private set
            {
                _entity = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Entity collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EntitySpecified
        {
            get
            {
                return (this.Entity.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RequirementsType" /> class.</para>
        /// </summary>
        public RequirementsType()
        {
            this._entity = new System.Collections.ObjectModel.Collection<RequirementsTypeEntity>();
            this._partOf = new System.Collections.ObjectModel.Collection<RequirementsTypePartOf>();
            this._classification = new System.Collections.ObjectModel.Collection<RequirementsTypeClassification>();
            this._attribute = new System.Collections.ObjectModel.Collection<RequirementsTypeAttribute>();
            this._property = new System.Collections.ObjectModel.Collection<RequirementsTypeProperty>();
            this._material = new System.Collections.ObjectModel.Collection<RequirementsTypeMaterial>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RequirementsTypePartOf> _partOf;
        
        [System.Xml.Serialization.XmlElementAttribute("partOf", Order=1)]
        public System.Collections.ObjectModel.Collection<RequirementsTypePartOf> PartOf
        {
            get
            {
                return _partOf;
            }
            private set
            {
                _partOf = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the PartOf collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartOfSpecified
        {
            get
            {
                return (this.PartOf.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RequirementsTypeClassification> _classification;
        
        [System.Xml.Serialization.XmlElementAttribute("classification", Order=2)]
        public System.Collections.ObjectModel.Collection<RequirementsTypeClassification> Classification
        {
            get
            {
                return _classification;
            }
            private set
            {
                _classification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Classification collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClassificationSpecified
        {
            get
            {
                return (this.Classification.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RequirementsTypeAttribute> _attribute;
        
        [System.Xml.Serialization.XmlElementAttribute("attribute", Order=3)]
        public System.Collections.ObjectModel.Collection<RequirementsTypeAttribute> Attribute
        {
            get
            {
                return _attribute;
            }
            private set
            {
                _attribute = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Attribute collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttributeSpecified
        {
            get
            {
                return (this.Attribute.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RequirementsTypeProperty> _property;
        
        [System.Xml.Serialization.XmlElementAttribute("property", Order=4)]
        public System.Collections.ObjectModel.Collection<RequirementsTypeProperty> Property
        {
            get
            {
                return _property;
            }
            private set
            {
                _property = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Property collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PropertySpecified
        {
            get
            {
                return (this.Property.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RequirementsTypeMaterial> _material;
        
        [System.Xml.Serialization.XmlElementAttribute("material", Order=5)]
        public System.Collections.ObjectModel.Collection<RequirementsTypeMaterial> Material
        {
            get
            {
                return _material;
            }
            private set
            {
                _material = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Gets a value indicating whether the Material collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaterialSpecified
        {
            get
            {
                return (this.Material.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RequirementsTypeEntity", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequirementsTypeEntity : EntityType
    {
        
        /// <summary>
        /// <para>Author of the IDS can leave instructions for the authors of the IFC. This text could/should be displayed in the BIM/IFC authoring tool.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author of the IDS can leave instructions for the authors of the IFC. This text co" +
            "uld/should be displayed in the BIM/IFC authoring tool.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("instructions")]
        public string Instructions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RequirementsTypePartOf", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequirementsTypePartOf : PartOfType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private SimpleCardinality _cardinality = global::Ids.SimpleCardinality.Required;
        
        [System.ComponentModel.DefaultValueAttribute(global::Ids.SimpleCardinality.Required)]
        [System.Xml.Serialization.XmlAttributeAttribute("cardinality")]
        public SimpleCardinality Cardinality
        {
            get
            {
                return _cardinality;
            }
            set
            {
                _cardinality = value;
            }
        }
        
        /// <summary>
        /// <para>Author of the IDS can leave instructions for the authors of the IFC. This text could/should be displayed in the BIM/IFC authoring tool.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author of the IDS can leave instructions for the authors of the IFC. This text co" +
            "uld/should be displayed in the BIM/IFC authoring tool.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("instructions")]
        public string Instructions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("simpleCardinality", Namespace="http://standards.buildingsmart.org/IDS")]
    public enum SimpleCardinality
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("required")]
        Required,
        
        [System.Xml.Serialization.XmlEnumAttribute("prohibited")]
        Prohibited,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RequirementsTypeClassification", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequirementsTypeClassification : ClassificationType
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("uri")]
        public string Uri { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ConditionalCardinality _cardinality = global::Ids.ConditionalCardinality.Required;
        
        [System.ComponentModel.DefaultValueAttribute(global::Ids.ConditionalCardinality.Required)]
        [System.Xml.Serialization.XmlAttributeAttribute("cardinality")]
        public ConditionalCardinality Cardinality
        {
            get
            {
                return _cardinality;
            }
            set
            {
                _cardinality = value;
            }
        }
        
        /// <summary>
        /// <para>Author of the IDS can leave instructions for the authors of the IFC. This text could/should be displayed in the BIM/IFC authoring tool.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author of the IDS can leave instructions for the authors of the IFC. This text co" +
            "uld/should be displayed in the BIM/IFC authoring tool.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("instructions")]
        public string Instructions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("conditionalCardinality", Namespace="http://standards.buildingsmart.org/IDS")]
    public enum ConditionalCardinality
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("required")]
        Required,
        
        [System.Xml.Serialization.XmlEnumAttribute("prohibited")]
        Prohibited,
        
        [System.Xml.Serialization.XmlEnumAttribute("optional")]
        Optional,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RequirementsTypeAttribute", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequirementsTypeAttribute : AttributeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ConditionalCardinality _cardinality = global::Ids.ConditionalCardinality.Required;
        
        [System.ComponentModel.DefaultValueAttribute(global::Ids.ConditionalCardinality.Required)]
        [System.Xml.Serialization.XmlAttributeAttribute("cardinality")]
        public ConditionalCardinality Cardinality
        {
            get
            {
                return _cardinality;
            }
            set
            {
                _cardinality = value;
            }
        }
        
        /// <summary>
        /// <para>Author of the IDS can leave instructions for the authors of the IFC. This text could/should be displayed in the BIM/IFC authoring tool.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author of the IDS can leave instructions for the authors of the IFC. This text co" +
            "uld/should be displayed in the BIM/IFC authoring tool.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("instructions")]
        public string Instructions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RequirementsTypeProperty", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequirementsTypeProperty : PropertyType
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("uri")]
        public string Uri { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ConditionalCardinality _cardinality = global::Ids.ConditionalCardinality.Required;
        
        [System.ComponentModel.DefaultValueAttribute(global::Ids.ConditionalCardinality.Required)]
        [System.Xml.Serialization.XmlAttributeAttribute("cardinality")]
        public ConditionalCardinality Cardinality
        {
            get
            {
                return _cardinality;
            }
            set
            {
                _cardinality = value;
            }
        }
        
        /// <summary>
        /// <para>Author of the IDS can leave instructions for the authors of the IFC. This text could/should be displayed in the BIM/IFC authoring tool.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author of the IDS can leave instructions for the authors of the IFC. This text co" +
            "uld/should be displayed in the BIM/IFC authoring tool.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("instructions")]
        public string Instructions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RequirementsTypeMaterial", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequirementsTypeMaterial : MaterialType
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("uri")]
        public string Uri { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ConditionalCardinality _cardinality = global::Ids.ConditionalCardinality.Required;
        
        [System.ComponentModel.DefaultValueAttribute(global::Ids.ConditionalCardinality.Required)]
        [System.Xml.Serialization.XmlAttributeAttribute("cardinality")]
        public ConditionalCardinality Cardinality
        {
            get
            {
                return _cardinality;
            }
            set
            {
                _cardinality = value;
            }
        }
        
        /// <summary>
        /// <para>Author of the IDS can leave instructions for the authors of the IFC. This text could/should be displayed in the BIM/IFC authoring tool.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author of the IDS can leave instructions for the authors of the IFC. This text co" +
            "uld/should be displayed in the BIM/IFC authoring tool.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("instructions")]
        public string Instructions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("specificationType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecificationType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("applicability", Order=0)]
        public ApplicabilityType Applicability { get; set; }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("requirements", Order=1)]
        public SpecificationTypeRequirements Requirements { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("name")]
        public string Name { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _ifcVersion;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ifcVersion")]
        public System.Collections.ObjectModel.Collection<string> IfcVersion
        {
            get
            {
                return _ifcVersion;
            }
            private set
            {
                _ifcVersion = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SpecificationType" /> class.</para>
        /// </summary>
        public SpecificationType()
        {
            this._ifcVersion = new System.Collections.ObjectModel.Collection<string>();
        }
        
        /// <summary>
        /// <para>Author of the IDS can provide an identifier to the specification. This is intended to be a machine readable identifier. Beware: because of the possibility to combine different 'specification' elements from several ids files this cannot be enforced/assumed as (global) unique.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"Author of the IDS can provide an identifier to the specification. This is intended to be a machine readable identifier. Beware: because of the possibility to combine different 'specification' elements from several ids files this cannot be enforced/assumed as (global) unique.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("identifier")]
        public string Identifier { get; set; }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("description")]
        public string Description { get; set; }
        
        /// <summary>
        /// <para>Author of the IDS can leave instructions for the authors of the IFC. This text could/should be displayed in the BIM/IFC authoring tool.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Author of the IDS can leave instructions for the authors of the IFC. This text co" +
            "uld/should be displayed in the BIM/IFC authoring tool.")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("instructions")]
        public string Instructions { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SpecificationTypeRequirements", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecificationTypeRequirements : RequirementsType
    {
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("description")]
        public string Description { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("specificationsType", Namespace="http://standards.buildingsmart.org/IDS")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecificationsType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SpecificationType> _specification;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("specification", Order=0)]
        public System.Collections.ObjectModel.Collection<SpecificationType> Specification
        {
            get
            {
                return _specification;
            }
            private set
            {
                _specification = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SpecificationsType" /> class.</para>
        /// </summary>
        public SpecificationsType()
        {
            this._specification = new System.Collections.ObjectModel.Collection<SpecificationType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ids", Namespace="http://standards.buildingsmart.org/IDS", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ids", Namespace="http://standards.buildingsmart.org/IDS")]
    public partial class Ids
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("info", Order=0)]
        public IdsInfo Info { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SpecificationType> _specifications;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("specifications", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("specification", Namespace="http://standards.buildingsmart.org/IDS")]
        public System.Collections.ObjectModel.Collection<SpecificationType> Specifications
        {
            get
            {
                return _specifications;
            }
            private set
            {
                _specifications = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Ids" /> class.</para>
        /// </summary>
        public Ids()
        {
            this._specifications = new System.Collections.ObjectModel.Collection<SpecificationType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1094.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IdsInfo", Namespace="http://standards.buildingsmart.org/IDS", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IdsInfo
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("title", Order=0)]
        public string Title { get; set; }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("copyright", Order=1)]
        public string Copyright { get; set; }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("version", Order=2)]
        public string Version { get; set; }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("description", Order=3)]
        public string Description { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [^@]+@[^\.]+\..+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[^@]+@[^\\.]+\\..+")]
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("author", Order=4)]
        public string Author { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("date", Order=5, DataType="date")]
        public System.DateTime DateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Date property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Date
        {
            get
            {
                if (this.DateValueSpecified)
                {
                    return this.DateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateValue = value.GetValueOrDefault();
                this.DateValueSpecified = value.HasValue;
            }
        }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("purpose", Order=6)]
        public string Purpose { get; set; }
        
        [System.Diagnostics.CodeAnalysis.AllowNullAttribute()]
        [System.Diagnostics.CodeAnalysis.MaybeNullAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("milestone", Order=7)]
        public string Milestone { get; set; }
    }
}
